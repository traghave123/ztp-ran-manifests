---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 4glte-timing-fec6
  namespace: default
  labels:
    node-role.kubernetes.io/ran-du-fec6-server-profile-du-supermicro00: ""
    app: timing-manager-pod
spec:
   selector:
     matchLabels:
       node-role.kubernetes.io/ran-du-fec6-server-profile-du-supermicro00: ""
   serviceName: 4glte-timing-fec6
   replicas: 1
   strategy:
     type: Recreate
   template:
    metadata:
      labels:
        node-role.kubernetes.io/ran-du-fec6-server-profile-du-supermicro00: ""
        app: timing-manager-pod
    spec:
      hostNetwork: true
      hostIPC: true
      terminationGracePeriodSeconds: 20
      nodeSelector:
        node-role.kubernetes.io/ran-du-fec6-server-profile-du-supermicro00: ""
      initContainers:
      # This container copy the PMC binary to /ptp/pmc
      - name: ose-ptp
        image: registry.redhat.io/openshift4/ose-ptp:v4.6
        command:
          - /bin/bash
          - -c
          - cp /usr/sbin/pmc /ptp/pmc
        volumeMounts:
         - mountPath: /ptp
           name: cache-volume
      containers:
      - name: du-timing
        image: vran-prov-server.prov.ibmlab.lan:5000/olmlocal/timingmgr:24
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash","-c","/opt/bin/startup_script; while true; do sleep 10000; done"]
        securityContext:
           privileged: true
           runAsUser: 0
           capabilities:
             add:
              - NET_ADMIN
              - SYS_RESOURCE
              - SYS_ADMIN
              - SYS_MODULE
              - IPC_LOCK
              - SYS_NICE
              - FOWNER
        ports:
         - containerPort: 8087
        volumeMounts:
         - mountPath: /usr/sbin/pmc
           name: cache-volume
           subPath: pmc
         - mountPath: /var/run
           name: socket-dir
        env:
          - name: NODE_NAME
            valueFrom:
                fieldRef:
                    fieldPath: spec.nodeName
        lifecycle:
          postStart:
            exec:
              command: ["/bin/bash", "-c", "echo $NODE_NAME > /var/www/lighttpd/node"]
      volumes:
      - name: cache-volume
        emptyDir: {}
      - name: socket-dir
        hostPath:
          path: "/var/run/ptp/"
          type: Directory
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
        - key: "node.kubernetes.io/unschedulable"
          operator: "Exists"
          effect: "NoExecute"
